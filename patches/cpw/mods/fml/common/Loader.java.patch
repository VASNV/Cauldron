--- ../src-base/minecraft/cpw/mods/fml/common/Loader.java
+++ ../src-work/minecraft/cpw/mods/fml/common/Loader.java
@@ -50,6 +50,7 @@
 import cpw.mods.fml.common.event.FMLLoadEvent;
 import cpw.mods.fml.common.functions.ArtifactVersionNameFunction;
 import cpw.mods.fml.common.functions.ModIdFunction;
+import cpw.mods.fml.common.modloader.BaseModProxy;
 import cpw.mods.fml.common.registry.GameData;
 import cpw.mods.fml.common.toposort.ModSorter;
 import cpw.mods.fml.common.toposort.ModSortingException;
@@ -124,6 +125,14 @@
      * The canonical configuration directory
      */
     private File canonicalConfigDir;
+    /**
+     * The canonical minecraft directory
+     */
+    private File canonicalMinecraftDir;
+    /**
+     * The captured error
+     */
+    private Exception capturedError;
     private File canonicalModsDir;
     private LoadController modController;
     private MinecraftDummyContainer minecraft;
@@ -278,13 +287,20 @@
     /**
      * The primary loading code
      *
+     * This is visited during first initialization by Minecraft to scan and load
+     * the mods from all sources 1. The minecraft jar itself (for loading of in
+     * jar mods- I would like to remove this if possible but forge depends on it
+     * at present) 2. The mods directory with expanded subdirs, searching for
+     * mods named mod_*.class 3. The mods directory for zip and jar files,
+     * searching for mod classes named mod_*.class again
      *
      * The found resources are first loaded into the {@link #modClassLoader}
      * (always) then scanned for class resources matching the specification
      * above.
      *
      * If they provide the {@link Mod} annotation, they will be loaded as
-     * "FML mods"
+     * "FML mods", which currently is effectively a NO-OP. If they are
+     * determined to be {@link BaseModProxy} subclasses they are loaded as such.
      *
      * Finally, if they are successfully loaded as classes, they are then added
      * to the available mod list.
@@ -381,6 +397,7 @@
 
         try
         {
+            canonicalMinecraftDir = minecraftDir.getCanonicalFile();
             canonicalModsPath = modsDir.getCanonicalPath();
             canonicalConfigPath = configDir.getCanonicalPath();
             canonicalConfigDir = configDir.getCanonicalFile();
