--- ../src-base/minecraft/net/minecraft/block/BlockFlowing.java
+++ ../src-work/minecraft/net/minecraft/block/BlockFlowing.java
@@ -2,8 +2,13 @@
 
 import java.util.Random;
 import net.minecraft.block.material.Material;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
+// CraftBukkit start
+import org.bukkit.block.BlockFace;
+import org.bukkit.event.block.BlockFromToEvent;
+// CraftBukkit end
 
 public class BlockFlowing extends BlockFluid
 {
@@ -61,6 +66,12 @@
         int i1 = this.tickRate(par1World);
         int j1;
 
+        // Cauldron - move CB edit to after variable initialization for coremod compatibility
+        // CraftBukkit start
+        org.bukkit.World bworld = par1World.getWorld();
+        org.bukkit.Server server = par1World.getServer();
+        org.bukkit.block.Block source = bworld == null ? null : bworld.getBlockAt(par2, par3, par4);
+        // CraftBukkit end
         if (l > 0)
         {
             byte b1 = -100;
@@ -90,17 +101,22 @@
                 }
             }
 
-            if (this.numAdjacentSources >= 2 && this.blockMaterial == Material.water)
+            // Cauldron start - allow disabling infinite water sources
+            if(MinecraftServer.getServer().cauldronConfig.infiniteWaterSource.getValue())
             {
-                if (par1World.getBlockMaterial(par2, par3 - 1, par4).isSolid())
+                if (this.numAdjacentSources >= 2 && this.blockMaterial == Material.water)
                 {
-                    j1 = 0;
+                    if (par1World.getBlockMaterial(par2, par3 - 1, par4).isSolid())
+                    {
+                        j1 = 0;
+                    }
+                    else if (par1World.getBlockMaterial(par2, par3 - 1, par4) == this.blockMaterial && par1World.getBlockMetadata(par2, par3 - 1, par4) == 0)
+                    {
+                        j1 = 0;
+                    }
                 }
-                else if (par1World.getBlockMaterial(par2, par3 - 1, par4) == this.blockMaterial && par1World.getBlockMetadata(par2, par3 - 1, par4) == 0)
-                {
-                    j1 = 0;
-                }
             }
+            // Cauldron end
 
             if (this.blockMaterial == Material.lava && l < 8 && j1 < 8 && j1 > l && par5Random.nextInt(4) != 0)
             {
@@ -113,6 +129,13 @@
                 {
                     this.updateFlow(par1World, par2, par3, par4);
                 }
+                // Cauldron start - allow lava decaying at a 'natural' rate - see https://mojang.atlassian.net/browse/MC-4631 Lava decay fails to schedule block update
+                else if (MinecraftServer.getServer().cauldronConfig.flowingLavaDecay.getValue())
+                {
+                    // Ensure that even if the flow decay was skipped, it will retry at the material's natural flow period.
+                    par1World.scheduleBlockUpdate(par2, par3, par4, this.blockID, this.tickRate(par1World));
+                }
+                // Cauldron end
             }
             else
             {
@@ -137,21 +160,33 @@
 
         if (this.liquidCanDisplaceBlock(par1World, par2, par3 - 1, par4))
         {
-            if (this.blockMaterial == Material.lava && par1World.getBlockMaterial(par2, par3 - 1, par4) == Material.water)
+            // CraftBukkit start - Send "down" to the server
+            BlockFromToEvent event = new BlockFromToEvent(source, BlockFace.DOWN);
+
+            if (server != null)
             {
-                par1World.setBlock(par2, par3 - 1, par4, Block.stone.blockID);
-                this.triggerLavaMixEffects(par1World, par2, par3 - 1, par4);
-                return;
+                server.getPluginManager().callEvent(event);
             }
 
-            if (l >= 8)
+            if (!event.isCancelled())
             {
-                this.flowIntoBlock(par1World, par2, par3 - 1, par4, l);
+                if (this.blockMaterial == Material.lava && par1World.getBlockMaterial(par2, par3 - 1, par4) == Material.water)
+                {
+                    par1World.setBlock(par2, par3 - 1, par4, Block.stone.blockID);
+                    this.triggerLavaMixEffects(par1World, par2, par3 - 1, par4);
+                    return;
+                }
+
+                if (l >= 8)
+                {
+                    this.flowIntoBlock(par1World, par2, par3 - 1, par4, l);
+                }
+                else
+                {
+                    this.flowIntoBlock(par1World, par2, par3 - 1, par4, l + 8);
+                }
             }
-            else
-            {
-                this.flowIntoBlock(par1World, par2, par3 - 1, par4, l + 8);
-            }
+            // CraftBukkit end
         }
         else if (l >= 0 && (l == 0 || this.blockBlocksFlow(par1World, par2, par3 - 1, par4)))
         {
@@ -168,25 +203,30 @@
                 return;
             }
 
-            if (aboolean[0])
-            {
-                this.flowIntoBlock(par1World, par2 - 1, par3, par4, j1);
-            }
+            // CraftBukkit start - All four cardinal directions. Do not change the order!
+            BlockFace[] faces = new BlockFace[] { BlockFace.WEST, BlockFace.EAST, BlockFace.NORTH, BlockFace.SOUTH };
+            int index = 0;
 
-            if (aboolean[1])
+            for (BlockFace currentFace : faces)
             {
-                this.flowIntoBlock(par1World, par2 + 1, par3, par4, j1);
-            }
+                if (aboolean[index])
+                {
+                    BlockFromToEvent event = new BlockFromToEvent(source, currentFace);
 
-            if (aboolean[2])
-            {
-                this.flowIntoBlock(par1World, par2, par3, par4 - 1, j1);
-            }
+                    if (server != null && par1World instanceof net.minecraft.world.WorldServer) // Cauldron - ignore fake worlds
+                    {
+                        server.getPluginManager().callEvent(event);
+                    }
 
-            if (aboolean[3])
-            {
-                this.flowIntoBlock(par1World, par2, par3, par4 + 1, j1);
+                    if (!event.isCancelled())
+                    {
+                        this.flowIntoBlock(par1World, par2 + currentFace.getModX(), par3, par4 + currentFace.getModZ(), j1);
+                    }
+                }
+
+                index++;
             }
+            // CraftBukkit end
         }
     }
 
@@ -206,7 +246,7 @@
                 {
                     this.triggerLavaMixEffects(par1World, par2, par3, par4);
                 }
-                else if (i1 != Block.snow.blockID)//Forge: Damn snow.
+                else if (i1 != Block.snow.blockID)//Forge: Damn snow. // Cauldron - TODO: make configurable
                 {
                     Block.blocksList[i1].dropBlockAsItem(par1World, par2, par3, par4, par1World.getBlockMetadata(par2, par3, par4), 0);
                 }
