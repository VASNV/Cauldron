--- ../src-base/minecraft/net/minecraft/block/BlockSapling.java
+++ ../src-work/minecraft/net/minecraft/block/BlockSapling.java
@@ -17,12 +17,20 @@
 import net.minecraft.world.gen.feature.WorldGenerator;
 
 import net.minecraftforge.event.terraingen.TerrainGen;
+// CraftBukkit start
+import org.bukkit.Location;
+import org.bukkit.TreeType;
+import org.bukkit.block.BlockState;
+import org.bukkit.event.world.StructureGrowEvent;
+// CraftBukkit end
+import net.minecraft.item.ItemDye; // Cauldron
 
 public class BlockSapling extends BlockFlower
 {
     public static final String[] WOOD_TYPES = new String[] {"oak", "spruce", "birch", "jungle"};
     @SideOnly(Side.CLIENT)
     private Icon[] saplingIcon;
+    public static TreeType treeType; // CraftBukkit
 
     protected BlockSapling(int par1)
     {
@@ -41,9 +49,31 @@
         {
             super.updateTick(par1World, par2, par3, par4, par5Random);
 
-            if (par1World.getBlockLightValue(par2, par3 + 1, par4) >= 9 && par5Random.nextInt(7) == 0)
+            if (par1World.getBlockLightValue(par2, par3 + 1, par4) >= 9 && (par5Random.nextInt(Math.max(2, (int)((par1World.growthOdds / par1World.spigotConfig.saplingModifier * 7) + 0.5F))) == 0))    // Spigot
             {
-                this.markOrGrowMarked(par1World, par2, par3, par4, par5Random);
+                // Cauldron start
+                par1World.captureTreeGeneration = true;
+                this.growTree(par1World, par2, par3, par4, par5Random);
+                par1World.captureTreeGeneration = false;
+                if (par1World.capturedBlockStates.size() > 0)
+                {
+                    TreeType treeType = BlockSapling.treeType;
+                    BlockSapling.treeType = null;
+                    Location location = new Location(par1World.getWorld(), par2, par3, par4);
+                    List<BlockState> blocks = (List<BlockState>) par1World.capturedBlockStates.clone();
+                    par1World.capturedBlockStates.clear();
+                    StructureGrowEvent event = null;
+                    if (treeType != null) {
+                        event = new StructureGrowEvent(location, treeType, false, null, blocks);
+                        org.bukkit.Bukkit.getPluginManager().callEvent(event);
+                    }
+                    if (event == null || !event.isCancelled()) {
+                        for (BlockState blockstate : blocks) {
+                            blockstate.update(true);
+                        }
+                    }
+                }
+                //Cauldron end
             }
         }
     }
@@ -88,10 +118,12 @@
 
         if (l == 1)
         {
+            treeType = TreeType.REDWOOD; // CraftBukkit
             object = new WorldGenTaiga2(true);
         }
         else if (l == 2)
         {
+            treeType = TreeType.BIRCH; // CraftBukkit
             object = new WorldGenForest(true);
         }
         else if (l == 3)
@@ -102,6 +134,7 @@
                 {
                     if (this.isSameSapling(par1World, par2 + i1, par3, par4 + j1, 3) && this.isSameSapling(par1World, par2 + i1 + 1, par3, par4 + j1, 3) && this.isSameSapling(par1World, par2 + i1, par3, par4 + j1 + 1, 3) && this.isSameSapling(par1World, par2 + i1 + 1, par3, par4 + j1 + 1, 3))
                     {
+                        treeType = TreeType.JUNGLE; // CraftBukkit
                         object = new WorldGenHugeTrees(true, 10 + par5Random.nextInt(20), 3, 3);
                         flag = true;
                         break;
@@ -118,15 +151,18 @@
             {
                 j1 = 0;
                 i1 = 0;
+                treeType = TreeType.SMALL_JUNGLE; // CraftBukkit
                 object = new WorldGenTrees(true, 4 + par5Random.nextInt(7), 3, 3, false);
             }
         }
         else
         {
+            treeType = TreeType.TREE; // CraftBukkit
             object = new WorldGenTrees(true);
 
             if (par5Random.nextInt(10) == 0)
             {
+                treeType = TreeType.BIG_TREE; // CraftBukkit
                 object = new WorldGenBigTree(true);
             }
         }
