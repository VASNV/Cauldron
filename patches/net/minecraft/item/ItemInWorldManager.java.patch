--- ../src-base/minecraft/net/minecraft/item/ItemInWorldManager.java
+++ ../src-work/minecraft/net/minecraft/item/ItemInWorldManager.java
@@ -1,22 +1,34 @@
 package net.minecraft.item;
 
+// CraftBukkit start
+import org.bukkit.event.block.BlockBreakEvent;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 import net.minecraft.block.Block;
+import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.network.packet.Packet53BlockChange;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.world.EnumGameType;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
+// CraftBukkit end
 
 import net.minecraftforge.common.ForgeHooks;
 import net.minecraftforge.common.MinecraftForge;
-import net.minecraftforge.event.Event;
 import net.minecraftforge.event.ForgeEventFactory;
 import net.minecraftforge.event.entity.player.PlayerDestroyItemEvent;
-import net.minecraftforge.event.entity.player.PlayerInteractEvent;
-import net.minecraftforge.event.entity.player.PlayerInteractEvent.Action;
 import net.minecraftforge.event.world.BlockEvent;
+// Cauldron start
+import cpw.mods.fml.common.registry.GameRegistry;
+import net.minecraft.inventory.Container;
+import net.minecraft.inventory.ContainerPlayer;
+import net.minecraft.inventory.IInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.event.inventory.InventoryType;
+// Cauldron end
 
 public class ItemInWorldManager
 {
@@ -91,7 +103,7 @@
 
     public void updateBlockRemoving()
     {
-        ++this.curblockDamage;
+        this.curblockDamage = MinecraftServer.currentTick; // CraftBukkit
         int i;
         float f;
         int j;
@@ -154,17 +166,33 @@
      * if not creative, it calls destroyBlockInWorldPartially untill the block is broken first. par4 is the specific
      * side. tryHarvestBlock can also be the result of this call
      */
-    public void onBlockClicked(int par1, int par2, int par3, int par4)
+    public void onBlockClicked(int par1, int par2, int par3, int par4) // Cauldron - merge this whole method by hand
     {
+        // this.world.douseFire((EntityHuman) null, i, j, k, l); // CraftBukkit - moved down
+        // CraftBukkit
+        org.bukkit.event.player.PlayerInteractEvent playerinteractevent = CraftEventFactory.callPlayerInteractEvent(this.thisPlayerMP, org.bukkit.event.block.Action.LEFT_CLICK_BLOCK, par1, par2, par3, par4, this.thisPlayerMP.inventory.getCurrentItem());
+
         if (!this.gameType.isAdventure() || this.thisPlayerMP.isCurrentToolAdventureModeExempt(par1, par2, par3))
         {
-            PlayerInteractEvent event = ForgeEventFactory.onPlayerInteract(thisPlayerMP, Action.LEFT_CLICK_BLOCK, par1, par2, par3, par4);
-            if (event.isCanceled())
+            net.minecraftforge.event.entity.player.PlayerInteractEvent playerinteractevent1 = ForgeEventFactory.onPlayerInteract(this.thisPlayerMP, net.minecraftforge.event.entity.player.PlayerInteractEvent.Action.LEFT_CLICK_BLOCK, par1, par2, par3, par4); // Forge
+
+            // CraftBukkit start
+            if (playerinteractevent.isCancelled() || playerinteractevent1.isCanceled())
             {
-                thisPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, theWorld));
+                // Let the client know the block still exists
+                ((EntityPlayerMP) this.thisPlayerMP).playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, this.theWorld));
+                // Update any tile entity data for this block
+                TileEntity tileentity = this.theWorld.getBlockTileEntity(par1, par2, par3);
+
+                if (tileentity != null)
+                {
+                    this.thisPlayerMP.playerNetServerHandler.sendPacketToPlayer(tileentity.getDescriptionPacket());
+                }
+
                 return;
             }
 
+            // CraftBukkit end
             if (this.isCreative())
             {
                 if (!this.theWorld.extinguishFire((EntityPlayer)null, par1, par2, par3, par4))
@@ -174,35 +202,67 @@
             }
             else
             {
+                //this.world.douseFire(this.player, i, j, k, l);  // Forge
                 this.initialDamage = this.curblockDamage;
                 float f = 1.0F;
                 int i1 = this.theWorld.getBlockId(par1, par2, par3);
+                // CraftBukkit start - Swings at air do *NOT* exist.
+                Block block = Block.blocksList[i1]; // Forge
 
-                Block block = Block.blocksList[i1];
-
                 if (block != null)
                 {
-                    if (event.useBlock != Event.Result.DENY)
+                    if (playerinteractevent.useInteractedBlock() == org.bukkit.event.Event.Result.DENY || playerinteractevent1.useBlock == net.minecraftforge.event.Event.Result.DENY)   // Cauldron
                     {
-                        block.onBlockClicked(theWorld, par1, par2, par3, thisPlayerMP);
-                        theWorld.extinguishFire(thisPlayerMP, par1, par2, par3, par4);
+                        // If we denied a door from opening, we need to send a correcting update to the client, as it already opened the door.
+                        if (i1 == Block.doorWood.blockID)
+                        {
+                            // For some reason *BOTH* the bottom/top part have to be marked updated.
+                            boolean bottom = (this.theWorld.getBlockMetadata(par1, par2, par3) & 8) == 0;
+                            ((EntityPlayerMP) this.thisPlayerMP).playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, this.theWorld));
+                            ((EntityPlayerMP) this.thisPlayerMP).playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2 + (bottom ? 1 : -1), par3, this.theWorld));
+                        }
+                        else if (i1 == Block.trapdoor.blockID)
+                        {
+                            ((EntityPlayerMP) this.thisPlayerMP).playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, this.theWorld));
+                        }
                     }
                     else
                     {
-                        thisPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, theWorld));
+                        // Forge start
+                        block.onBlockClicked(theWorld, par1, par2, par3, this.thisPlayerMP);
+                        theWorld.extinguishFire(this.thisPlayerMP, par1, par2, par3, par4);
+                        f = block.getPlayerRelativeBlockHardness(this.thisPlayerMP, this.theWorld, par1, par2, par3);
+                        // Forge end
                     }
-                    f = block.getPlayerRelativeBlockHardness(thisPlayerMP, thisPlayerMP.worldObj, par1, par2, par3);
                 }
 
-                if (event.useItem == Event.Result.DENY)
+                if (playerinteractevent.useItemInHand() == org.bukkit.event.Event.Result.DENY || playerinteractevent1.useItem == net.minecraftforge.event.Event.Result.DENY)   // Forge
                 {
-                    if (f >= 1.0f)
+                    // If we 'insta destroyed' then the client needs to be informed.
+                    if (f > 1.0f)
                     {
-                        thisPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, theWorld));
+                        ((EntityPlayerMP) this.thisPlayerMP).playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, this.theWorld));
                     }
+
                     return;
                 }
 
+                org.bukkit.event.block.BlockDamageEvent blockEvent = CraftEventFactory.callBlockDamageEvent(this.thisPlayerMP, par1, par2, par3, this.thisPlayerMP.inventory.getCurrentItem(), f >= 1.0f);
+
+                if (blockEvent.isCancelled())
+                {
+                    // Let the client know the block still exists
+                    ((EntityPlayerMP) this.thisPlayerMP).playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, this.theWorld));
+                    return;
+                }
+
+                if (blockEvent.getInstaBreak())
+                {
+                    f = 2.0f;
+                }
+
+                // CraftBukkit end
+
                 if (i1 > 0 && f >= 1.0F)
                 {
                     this.tryHarvestBlock(par1, par2, par3);
@@ -218,6 +278,7 @@
                     this.durabilityRemainingOnBlock = j1;
                 }
             }
+            theWorld.spigotConfig.antiXrayInstance.updateNearbyBlocks(theWorld, par1, par2, par3); // Spigot
         }
     }
 
@@ -225,6 +286,7 @@
     {
         if (par1 == this.partiallyDestroyedBlockX && par2 == this.partiallyDestroyedBlockY && par3 == this.partiallyDestroyedBlockZ)
         {
+            this.curblockDamage = MinecraftServer.currentTick; // CraftBukkit
             int l = this.curblockDamage - this.initialDamage;
             int i1 = this.theWorld.getBlockId(par1, par2, par3);
 
@@ -249,7 +311,14 @@
                     this.field_73093_n = this.initialDamage;
                 }
             }
+
+            // CraftBukkit start - Force block reset to client
         }
+        else
+        {
+            this.thisPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par1, par2, par3, this.theWorld));
+            // CraftBukkit end
+        }
     }
 
     /**
@@ -291,18 +360,25 @@
     {
         BlockEvent.BreakEvent event = ForgeHooks.onBlockBreakEvent(theWorld, gameType, thisPlayerMP, par1, par2, par3);
         if (event.isCanceled())
+                {
+                return false;
+            }
+        else
         {
+        ItemStack stack = thisPlayerMP.getCurrentEquippedItem();
+        if (stack != null && stack.getItem().onBlockStartBreak(stack, par1, par2, par3, thisPlayerMP))
+        {
             return false;
         }
-        else
-        {
-            ItemStack stack = thisPlayerMP.getCurrentEquippedItem();
-            if (stack != null && stack.getItem().onBlockStartBreak(stack, par1, par2, par3, thisPlayerMP))
+            int l = this.theWorld.getBlockId(par1, par2, par3);
+
+            if (Block.blocksList[l] == null)
             {
-                return false;
+                return false;    // CraftBukkit - A plugin set block to air without cancelling
             }
-            int l = this.theWorld.getBlockId(par1, par2, par3);
+
             int i1 = this.theWorld.getBlockMetadata(par1, par2, par3);
+
             this.theWorld.playAuxSFXAtEntity(this.thisPlayerMP, 2001, par1, par2, par3, l + (this.theWorld.getBlockMetadata(par1, par2, par3) << 12));
             boolean flag = false;
 
@@ -339,10 +415,10 @@
             }
 
             // Drop experience
-	        if (!this.isCreative() && flag && event != null)
-	        {
-	            Block.blocksList[l].dropXpOnBlockBreak(this.theWorld, par1, par2, par3, event.getExpToDrop());
-	        }
+            if (!this.isCreative() && flag && event != null)
+            {
+                Block.blocksList[l].dropXpOnBlockBreak(this.theWorld, par1, par2, par3, event.getExpToDrop());
+            }
 
             return flag;
         }
@@ -394,58 +470,106 @@
      * Activate the clicked on block, otherwise use the held item. Args: player, world, itemStack, x, y, z, side,
      * xOffset, yOffset, zOffset
      */
-    public boolean activateBlockOrUseItem(EntityPlayer par1EntityPlayer, World par2World, ItemStack par3ItemStack, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
+    public boolean activateBlockOrUseItem(EntityPlayer par1EntityPlayer, World par2World, ItemStack par3ItemStack, int par4, int par5, int par6, int par7, float par8, float par9, float par10) // Cauldron - manually merge whole method by hand
     {
-        PlayerInteractEvent event = ForgeEventFactory.onPlayerInteract(par1EntityPlayer, Action.RIGHT_CLICK_BLOCK, par4, par5, par6, par7);
-        if (event.isCanceled())
-        {
-            thisPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par4, par5, par6, theWorld));
-            return false;
-        }
-
-        Item item = (par3ItemStack != null ? par3ItemStack.getItem() : null);
-        if (item != null && item.onItemUseFirst(par3ItemStack, par1EntityPlayer, par2World, par4, par5, par6, par7, par8, par9, par10))
-        {
-            if (par3ItemStack.stackSize <= 0) ForgeEventFactory.onPlayerDestroyItem(thisPlayerMP, par3ItemStack);
-            return true;
-        }
-
         int i1 = par2World.getBlockId(par4, par5, par6);
-        Block block = Block.blocksList[i1];
+
+        // CraftBukkit start - Interact
         boolean result = false;
 
-        if (block != null && (!par1EntityPlayer.isSneaking() || ( par1EntityPlayer.getHeldItem() == null || par1EntityPlayer.getHeldItem().getItem().shouldPassSneakingClickToBlock(par2World, par4, par5, par6))))
+        if (i1 > 0)
         {
-            if (event.useBlock != Event.Result.DENY)
+            org.bukkit.event.player.PlayerInteractEvent event = CraftEventFactory.callPlayerInteractEvent(par1EntityPlayer, org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK, par4, par5, par6, par7, par3ItemStack);
+            net.minecraftforge.event.entity.player.PlayerInteractEvent forgeEvent = ForgeEventFactory.onPlayerInteract(par1EntityPlayer, net.minecraftforge.event.entity.player.PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK, par4, par5, par6, par7);
+            // Cauldron start
+            // if forge event is explicitly cancelled, return
+            if (forgeEvent.isCanceled())
             {
-                result = block.onBlockActivated(par2World, par4, par5, par6, par1EntityPlayer, par7, par8, par9, par10);
+                thisPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par4, par5, par6, theWorld));
+                return false;
             }
-            else
+            // if we have no explicit deny, check if item can be used
+            if (event.useItemInHand() != org.bukkit.event.Event.Result.DENY && forgeEvent.useItem != net.minecraftforge.event.Event.Result.DENY)
             {
-                thisPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par4, par5, par6, theWorld));
-                result = event.useItem != Event.Result.ALLOW;
+                Item item = (par3ItemStack != null ? par3ItemStack.getItem() : null);
+                // try to use an item in hand before activating a block. Used for items such as IC2's wrench.
+                if (item != null && item.onItemUseFirst(par3ItemStack, par1EntityPlayer, par2World, par4, par5, par6, par7, par8, par9, par10))
+                {
+                    if (par3ItemStack.stackSize <= 0) ForgeEventFactory.onPlayerDestroyItem(thisPlayerMP, par3ItemStack);
+                        return true;
+                }
             }
-        }
+            // Cauldron end
+            if (event.useInteractedBlock() == org.bukkit.event.Event.Result.DENY || forgeEvent.useBlock == net.minecraftforge.event.Event.Result.DENY)
+            {
+                // If we denied a door from opening, we need to send a correcting update to the client, as it already opened the door.
+                if (i1 == Block.doorWood.blockID)
+                {
+                    boolean bottom = (par2World.getBlockMetadata(par4, par5, par6) & 8) == 0;
+                    ((EntityPlayerMP) par1EntityPlayer).playerNetServerHandler.sendPacketToPlayer(new Packet53BlockChange(par4, par5 + (bottom ? 1 : -1), par6, par2World));
+                }
 
-        if (par3ItemStack != null && !result && event.useItem != Event.Result.DENY)
-        {
-            int meta = par3ItemStack.getItemDamage();
-            int size = par3ItemStack.stackSize;
-            result = par3ItemStack.tryPlaceItemIntoWorld(par1EntityPlayer, par2World, par4, par5, par6, par7, par8, par9, par10);
-            if (isCreative())
+                result = (event.useItemInHand() != org.bukkit.event.Event.Result.ALLOW);
+            }
+            else if (!par1EntityPlayer.isSneaking() || par3ItemStack == null || par1EntityPlayer.getHeldItem().getItem().shouldPassSneakingClickToBlock(par2World, par4, par5, par6))
             {
-                par3ItemStack.setItemDamage(meta);
-                par3ItemStack.stackSize = size;
+                result = Block.blocksList[i1].onBlockActivated(par2World, par4, par5, par6, par1EntityPlayer, par7, par8, par9, par10);
+                // Cauldron start - if bukkitView is null, create one. Required for Ender Chests since they do not use NetworkRegistry.openRemoteGUI
+                if (thisPlayerMP != null && !(thisPlayerMP.openContainer instanceof ContainerPlayer))
+                {
+                    if (thisPlayerMP.openContainer.getBukkitView() == null)
+                    {
+                        TileEntity te = thisPlayerMP.worldObj.getBlockTileEntity(par4, par5, par6);
+                        if (te != null && te instanceof IInventory)
+                        {
+                            IInventory teInv = (IInventory)te;
+                            CraftInventory inventory = new CraftInventory(teInv);
+                            thisPlayerMP.openContainer.bukkitView = new CraftInventoryView(thisPlayerMP.getBukkitEntity(), inventory, thisPlayerMP.openContainer);
+                        }
+                        else
+                        {
+                            thisPlayerMP.openContainer.bukkitView = new CraftInventoryView(thisPlayerMP.getBukkitEntity(), MinecraftServer.getServer().server.createInventory(thisPlayerMP.getBukkitEntity(), InventoryType.CHEST), thisPlayerMP.openContainer);
+                        }
+
+                        thisPlayerMP.openContainer = CraftEventFactory.callInventoryOpenEvent(thisPlayerMP, thisPlayerMP.openContainer, false);
+                        if (thisPlayerMP.openContainer == null)
+                        {
+                            thisPlayerMP.openContainer = thisPlayerMP.inventoryContainer;
+                            return false;
+                        }
+                    }
+                }
+                // Cauldron end
             }
-            if (par3ItemStack.stackSize <= 0) ForgeEventFactory.onPlayerDestroyItem(thisPlayerMP, par3ItemStack);
+
+            if (par3ItemStack != null && !result)
+            {
+                int meta = par3ItemStack.getItemDamage();
+                int size = par3ItemStack.stackSize;
+                result = par3ItemStack.tryPlaceItemIntoWorld(par1EntityPlayer, par2World, par4, par5, par6, par7, par8, par9, par10);
+
+                // The item count should not decrement in Creative mode.
+                if (this.isCreative())
+                {
+                    par3ItemStack.setItemDamage(meta);
+                    par3ItemStack.stackSize = size;
+                }
+
+                if (par3ItemStack.stackSize <= 0)
+                {
+                    ForgeEventFactory.onPlayerDestroyItem(this.thisPlayerMP, par3ItemStack);
+                }
+            }
+
+            // If we have 'true' and no explicit deny *or* an explicit allow -- run the item part of the hook
+            if (par3ItemStack != null && ((!result && event.useItemInHand() != org.bukkit.event.Event.Result.DENY) || event.useItemInHand() == org.bukkit.event.Event.Result.ALLOW))
+            {
+                this.tryUseItem(par1EntityPlayer, par2World, par3ItemStack);
+            }
         }
 
-        /* Re-enable if this causes bukkit incompatibility, or re-write client side to only send a single packet per right click.
-        if (par3ItemStack != null && ((!result && event.useItem != Event.Result.DENY) || event.useItem == Event.Result.ALLOW))
-        {
-            this.tryUseItem(thisPlayerMP, par2World, par3ItemStack);
-        }*/
         return result;
+        // CraftBukkit end
     }
 
     /**
